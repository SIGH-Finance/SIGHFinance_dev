type ContractAddresses @entity {
    id: ID!

    GlobalAddressesProviderContractAddress: Bytes!




}

type SIGH_FINANCE @entity {    
    id: ID!
    creationBlockNumber: BigInt!
    instrumentSupported: [Bytes]!

    SIGH_MintSpeed_WEI: BigInt!
    SIGH_MintSpeed: BigDecimal!
    SIGH_BurnSpeed_WEI: BigInt!
    SIGH_BurnSpeed: BigDecimal!

    "Mint Speed - Burn Speed - Mechanism Distribution Speed - Treasury Distribution Speed"
    SIGH_Controller_Accumulation_Speed_WEI: BigInt!
    SIGH_Controller_Accumulation_Speed: BigDecimal!

    SIGH_Controller_Treasury_Speed_WEI: BigInt!
    SIGH_Controller_Treasury_Speed: BigDecimal!

    SIGH_Controller_Mechanism_Speed_WEI: BigInt!
    SIGH_Controller_Mechanism_Speed: BigDecimal!

    Volatility_Mechanim_SIGH_Speed_WEI: BigInt!
    Volatility_Mechanim_SIGH_Speed: BigDecimal!

    Volatility_Mechanim_SIGH_Speed_Used_WEI: BigInt!
    Volatility_Mechanim_SIGH_Speed_Used: BigDecimal!

    Volatility_Mechanim_IsUpperCheckActive: Boolean!
    Volatility_Mechanim_UpperCheckPercent: Boolean!   

    present_Total_Volatility: BigInt! 
    present_Total_VolatilityETH: BigDecimal!    
    present_Total_VolatilityUSD: BigDecimal!

    present_Total_VolatilityLimitAmount: BigInt! 
    present_Total_VolatilityLimitAmountETH: BigDecimal!    
    present_Total_VolatilityLimitAmountUSD: BigDecimal!

}


type SIGH_Instrument @entity {
    "ID is contract address"
    id: ID!
    creationBlockNumber: BigInt!
    address: Bytes!
    name: String!
    symbol: String!
    decimals: BigInt!
    priceETH: BigDecimal!
    priceUSD: BigDecimal!
    treasury: Bytes!
    speedController: Bytes!

    totalSupply_WEI: BigInt!
    totalSupply: BigDecimal!

    recentSIGHBurnt_WEI: BigInt!
    recentSIGHBurnt: BigDecimal!
    totalSIGHBurnt_WEI: BigInt!
    totalSIGHBurnt: BigDecimal!

    blocksPerCycle: BigInt!

    currentCycle: BigInt!
    currentSchedule: BigInt!
    currentInflation: BigDecimal!

    oracle: Bytes!

    "Per Block Speed at which $SIGH is being Minted!"
    currentMintSpeed_WEI: BigInt!
    currentMintSpeed: BigDecimal!

    "Per Block Speed at which $SIGH is being Burned!"
    currentBurnSpeed_WEI: BigInt!
    currentBurnSpeed: BigDecimal!

    "Maximum Speed at which $SIGH can be distributed to harvest Volatility of the Supported Markets!"
    maxSighVolatilityHarvestSpeedWEI: BigDecimal!
    maxSighVolatilityHarvestSpeed: BigDecimal!
    
    "block Number when $SIGH Volatility harvest speed was last calculated"
    blockNumberWhenSighVolatilityHarvestSpeedWasRefreshed: BigInt!

    "block Number when INSTRUMENT Volatility were last calculated"
    blockNumberWhenInstrumentVolatilityWasRefreshed: BigInt!

    minimumBlocksBeforeSpeedRefresh: BigInt!

    isUpperCheckForVolatilitySet: Boolean!
    "Captures the current overall Bull / Bear sentiment of the crypto-currencies Market. Is the percent of the Harvestable Volatility currently being harvested through $SIGH Farming!"
    cryptoMarketSentiment: BigDecimal!

    "Current Speed at which $SIGH is being distributed to harvest Volatility of the Supported Markets!"
    currentSighVolatilityHarvestSpeedWEI: BigDecimal!
    currentSighVolatilityHarvestSpeed: BigDecimal!

    "Total Volatility of the Lending Protocol : Per Block"
    totalLendingProtocolVolatilityPerBlockETH: BigDecimal!
    totalLendingProtocolVolatilityPerBlockUSD: BigDecimal!

    "Total Positive Volatility of the Lending Protocol : Per Block"
    bullTotalLendingProtocolVolatilityPerBlockETH: BigDecimal!
    bullTotalLendingProtocolVolatilityPerBlockUSD: BigDecimal!

    "Total Negative Volatility of the Lending Protocol : Per Block"
    bearTotalLendingProtocolVolatilityPerBlockETH: BigDecimal!
    bearTotalLendingProtocolVolatilityPerBlockUSD: BigDecimal!

    "Maximum Volatility that can be harvested : Per Block"
    totalLendingProtocolSentimentVolatilityPerBlockETH: BigDecimal!
    totalLendingProtocolSentimentVolatilityPerBlockUSD: BigDecimal!

    "Total Positive Volatility of the Lending Protocol that can be harvested : Per Block"
    bullTotalLendingProtocolSentimentVolatilityPerBlockETH: BigDecimal!
    bullTotalLendingProtocolSentimentVolatilityPerBlockUSD: BigDecimal!

    "Total Negative Volatility of the Lending Protocol that can be harvested : Per Block"
    bearTotalLendingProtocolSentimentVolatilityPerBlockETH: BigDecimal!
    bearTotalLendingProtocolSentimentVolatilityPerBlockUSD: BigDecimal!


    "cryptoMarketSentiment * (Maximum Volatility that can be harvested) : Per Block"
    cryptoMarketSentimentFinalProtocolVolatilityPerBlockETH: BigDecimal!
    cryptoMarketSentimentFinalProtocolVolatilityPerBlockUSD: BigDecimal!



    "Maximum Value of $SIGH that can be harvested : Per Block"
    maxHarvestSizePossibleETH: BigDecimal!
    maxHarvestSizePossibleUSD: BigDecimal!           


    bullCurrentTotalSighHarvestSpeed: BigDecimal!      
    bearCurrentTotalSighHarvestSpeed: BigDecimal!      
    stakingCurrentTotalSighHarvestSpeed: BigDecimal!

    mintSnapshots: [MintSnapshot!]! @derivedFrom(field:"instrument_sigh")
}

type MintSnapshot @entity {
    id: ID!
    priceETH: BigDecimal!
    priceUSD: BigDecimal!
    instrument_sigh: SIGH_Instrument! 
    schedule: BigInt!
    inflationRate: BigDecimal!
    mintedAmount_WEI: BigInt!
    mintedAmount: BigDecimal!
    totalSupply_WEI: BigInt!
    totalSupply: BigDecimal!
    mintSpeed_WEI: BigInt!
    mintSpeed: BigDecimal!
    burnSpeed_WEI: BigInt!
    burnSpeed: BigDecimal!
    totalSighBurnt_WEI: BigInt!
    totalSighBurnt: BigDecimal!
    minter: Bytes!
    blockNumber: BigInt!
}






type Instrument @entity {
    id: ID!

    instrumentAddress: Bytes!
    iTokenAddress: Bytes!
    interestRateStrategyAddress: Bytes!
    sighStreamStorageAddress: Bytes!
    sighStreamImplAddress: Bytes!

    oracle: Bytes!

    priceETH: BigDecimal! 
    priceUSD: BigDecimal! 
    priceDecimals: BigInt!
    ETHPriceInUSD: BigDecimal!

    name: String!
    symbol: String!
    underlyingInstrumentName: String!
    underlyingInstrumentSymbol: String!
    decimals: BigInt!

    isActive: Boolean!
    isFreezed: Boolean!
    borrowingEnabled: Boolean!
    usageAsCollateralEnabled: Boolean!
    isStableBorrowRateEnabled: Boolean!

    baseLTVasCollateral: BigInt!
    liquidationThreshold: BigInt!
    liquidationBonus: BigInt!

    depositFeeEarned_WEI: BigInt! 
    depositFeeEarned: BigDecimal! 
    depositFeeEarnedETH: BigDecimal!
    depositFeeEarnedUSD: BigDecimal!

    borrowFeeDue_WEI: BigInt! 
    borrowFeeDue: BigDecimal! 
    borrowFeeDueETH: BigDecimal!
    borrowFeeDueUSD: BigDecimal!

    borrowFeeEarned_WEI: BigInt! 
    borrowFeeEarned: BigDecimal! 
    borrowFeeEarnedETH: BigDecimal!
    borrowFeeEarnedUSD: BigDecimal!

    "availableLiquidity_WEI : totalLiquidity_WEI - totalPrincipalBorrows_WEI, present tokenized instrument quantity available with SIGH Finance's Lending Pool for borrowing. (not adjusted by decimal)"    
    availableLiquidity_WEI: BigInt!
    availableLiquidity: BigDecimal!
    availableLiquidityETH: BigDecimal!
    availableLiquidityUSD: BigDecimal!

    totalCompoundedLiquidityWEI: BigInt!
    totalCompoundedLiquidity: BigDecimal!
    totalCompoundedLiquidityETH: BigDecimal!
    totalCompoundedLiquidityUSD: BigDecimal!

    totalCompoundedBorrowsWEI: BigInt!
    totalCompoundedBorrows: BigDecimal!
    totalCompoundedBorrowsETH: BigDecimal!
    totalCompoundedBorrowsUSD: BigDecimal!

    totalCompoundedStableBorrowsWEI: BigInt!
    totalCompoundedStableBorrows: BigDecimal!
    totalCompoundedStableBorrowsETH: BigDecimal!
    totalCompoundedStableBorrowsUSD: BigDecimal!

    totalCompoundedVariableBorrowsWEI: BigInt!
    totalCompoundedVariableBorrows: BigDecimal!
    totalCompoundedVariableBorrowsETH: BigDecimal!
    totalCompoundedVariableBorrowsUSD: BigDecimal!

    "totalCompoundedEarnings_WEI : totalCompoundedEarningsSTABLEInterest_WEI + totalCompoundedEarningsVARIABLEInterest_WEI, present tokenized instrument's total quantity earned through Borrowing Interest Rates. (not adjusted by decimal)"    
    totalBorrowingEarnings_WEI: BigInt!
    totalBorrowingEarnings: BigDecimal!
    totalBorrowingEarningsETH: BigDecimal!
    totalBorrowingEarningsUSD: BigDecimal!

    "stableBorrowInterestRate : Current Stable Borrow Interest Rate (not adjusted by decimal)"    
    stableBorrowInterestRate: BigInt!
    stableBorrowInterestPercent: BigDecimal!

    "variableBorrowInterestRate : Current Variable Borrow Interest Rate (not adjusted by decimal)"    
    variableBorrowInterestRate: BigInt!
    variableBorrowInterestPercent: BigDecimal!
    variableBorrowIndex: BigInt!

    utilizationRate: BigDecimal!
    utilizationRatePercent: BigDecimal!

    "supplyInterestRate : Current Supply Interest Rate (not adjusted by decimal)"    
    supplyInterestRate: BigInt!
    supplyInterestRatePercent: BigDecimal!
    supplyIndex: BigInt!

    sighPayInterestRate: BigInt!
    sighPayInterestRatePercent: BigDecimal!
    sighPayCumulativeIndex: BigInt!
    sighPayPaidIndex: BigInt!

    sighPayTransferredWEI: BigInt!
    sighPayTransferred: BigDecimal!
    sighPayTransferredETH: BigDecimal!
    sighPayTransferredUSD: BigDecimal!

    lifeTimeDeposits_WEI: BigInt!
    lifeTimeDeposits: BigDecimal!
    lifeTimeDepositsETH: BigDecimal!
    lifeTimeDepositsUSD: BigDecimal!

    lifeTimeBorrows_WEI:  BigInt!
    lifeTimeBorrows:  BigDecimal!
    lifeTimeBorrowsETH: BigDecimal!
    lifeTimeBorrowsUSD: BigDecimal!

    lifeTimeStableBorrows_WEI: BigInt!
    lifeTimeStableBorrows: BigDecimal!
    lifeTimeStableBorrowsETH: BigDecimal!
    lifeTimeStableBorrowsUSD: BigDecimal!

    lifeTimeVariableBorrows_WEI: BigInt!
    lifeTimeVariableBorrows: BigDecimal!
    lifeTimeVariableBorrowsETH: BigDecimal!
    lifeTimeVariableBorrowsUSD: BigDecimal!

    lifeTimeBorrowsRepaid_WEI: BigInt!
    lifeTimeBorrowsRepaid: BigDecimal!
    lifeTimeBorrowsRepaidETH: BigDecimal!
    lifeTimeBorrowsRepaidUSD: BigDecimal!

    totalLiquiditySIGHAccuredWEI: BigInt!
    totalLiquiditySIGHAccured: BigDecimal!

    currentLiquiditySIGHAccuredWEI: BigInt!
    currentLiquiditySIGHAccured: BigDecimal!

    totalBorrowingSIGHAccuredWEI: BigInt!
    totalBorrowingSIGHAccured: BigDecimal!

    currentBorrowingSIGHAccuredWEI: BigInt!
    currentBorrowingSIGHAccured: BigDecimal!




    isListedWithSIGH_Mechanism: Boolean!
    isSIGHMechanismActivated: Boolean!
    totalSIGHDistributionSnapshotsTaken: BigInt!

    SIGH_Supply_Index: BigInt!
    SIGH_Supply_Index_lastUpdatedBlock: BigInt!

    SIGH_Borrow_Index: BigInt!
    SIGH_Borrow_Index_lastUpdatedBlock: BigInt!

    bearSentimentPercent: BigDecimal!
    bullSentimentPercent: BigDecimal!

    present_PrevPrice_ETH: BigDecimal! 
    present_PrevPrice_USD: BigDecimal! 

    present_OpeningPrice_ETH: BigDecimal! 
    present_OpeningPrice_USD: BigDecimal! 

    present_SIGH_Side: String!
    present_DeltaBlocks: BigInt!

    "Instrument volatility in 24 hrs"
    present_total24HrVolatilityETH: BigDecimal!    
    present_total24HrVolatilityUSD: BigDecimal!
    present_percentTotalVolatility: BigDecimal! 

    "Instrument volatility * maxVolatilityLimit"
    present_total24HrSentimentVolatilityETH: BigDecimal!  
    present_total24HrSentimentVolatilityUSD: BigDecimal!
    present_percentTotalSentimentVolatility: BigDecimal!

    present_SIGH_Suppliers_Speed_WEI: BigInt!
    present_SIGH_Suppliers_Speed: BigDecimal!

    present_SIGH_Borrowers_Speed_WEI: BigInt!
    present_SIGH_Borrowers_Speed: BigDecimal!

    present_SIGH_Staking_Speed_WEI: BigInt!
    present_SIGH_Staking_Speed: BigDecimal!

    present_harvestSpeedPerBlock: BigDecimal!
    present_harvestValuePerBlockUSD: BigDecimal!

    present_harvestSpeedPerDay: BigDecimal!
    present_harvestValuePerDayUSD: BigDecimal!

    present_harvestSpeedPerYear: BigDecimal!
    present_harvestValuePerYearUSD: BigDecimal!

    present_harvestAPY: BigDecimal!
    present_suppliersHarvestAPY: BigDecimal!
    present_borrowersHarvestAPY: BigDecimal!

    SIGH_Distribution_History: [SIGH_Distribution_SnapShot!]! @derivedFrom(field:"instrumentAddress")

    average24SnapsHarvestSpeedPerBlock: BigDecimal!
    average24SnapsHarvestValuePerBlockUSD: BigDecimal!

    average24SnapsHarvestSpeedPerDay: BigDecimal!
    average24SnapsHarvestValuePerDayUSD: BigDecimal!

    average24SnapsHarvestSpeedPerYear: BigDecimal!
    average24SnapsHarvestValuePerYearUSD: BigDecimal!

    average24SnapsHarvestAPY: BigDecimal!
    average24SnapsSuppliersHarvestAPY: BigDecimal!
    average24SnapsBorrowersHarvestAPY: BigDecimal!

    averageMonthlySnapsHarvestSpeedPerBlock: BigDecimal!
    averageMonthlySnapsHarvestValuePerBlockUSD: BigDecimal!

    averageMonthlySnapsHarvestSpeedPerDay: BigDecimal!
    averageMonthlySnapsHarvestValuePerDayUSD: BigDecimal!

    averageMonthlySnapsHarvestSpeedPerYear: BigDecimal!
    averageMonthlySnapsHarvestValuePerYearUSD: BigDecimal!

    averageMonthlySnapsHarvestAPY: BigDecimal!
    averageMonthlySnapsSuppliersHarvestAPY: BigDecimal!
    averageMonthlySnapsBorrowersHarvestAPY: BigDecimal!


    instrumentActualPriceETH: BigDecimal!
    instrumentHarvestAdjustedPriceSuppliersETH: BigDecimal!
    instrumentHarvestAdjustedPriceBorrowersETH: BigDecimal!

    instrumentActualPriceUSD: BigDecimal!
    instrumentHarvestAdjustedPriceSuppliersUSD: BigDecimal!
    instrumentHarvestAdjustedPriceBorrowersUSD: BigDecimal!

    timeStamp: BigInt!
    creationBlockNumber: BigInt!
    SIGHPriceUSD:  BigDecimal!
}



type SIGH_Distribution_SnapShot @entity {
    id: ID!
    instrumentAddress: Instrument! 

    fromBlockNumber: BigInt!
    toBlockNumber: BigInt!
    deltaBlocks24Hrs: BigInt!
    clock: BigInt!

    prevPrice_ETH: BigDecimal! 
    prevPrice_USD: BigDecimal! 
    openingPrice_ETH: BigDecimal! 
    openingPrice_USD: BigDecimal! 
    priceDifferenceETH: BigDecimal!
    priceDifferenceUSD: BigDecimal!

    bearSentimentPercent: BigDecimal!
    bullSentimentPercent: BigDecimal!

    total24HrVolatilityETH: BigDecimal!
    total24HrVolatilityUSD: BigDecimal!
    total24HrSentimentVolatilityETH: BigDecimal!
    total24HrSentimentVolatilityUSD: BigDecimal!

    totalVolatilityAsPercentOfTotalProtocolVolatility: BigDecimal!
    instrumentSentimentVolatilityAsPercentOfProtocolSentimentVolatility: BigDecimal!

    suppliers_Speed: BigDecimal!
    borrowers_Speed: BigDecimal!
    staking_Speed: BigDecimal!    

    distribution_Side: String!

    harvestSpeedPerBlock: BigDecimal!
    harvestValuePerBlockETH: BigDecimal!
    harvestValuePerBlockUSD: BigDecimal!

    harvestSpeedPerDay: BigDecimal!
    harvestValuePerDayETH: BigDecimal!
    harvestValuePerDayUSD: BigDecimal!

    harvestSpeedPerYear: BigDecimal!
    harvestValuePerYearETH: BigDecimal!
    harvestValuePerYearUSD: BigDecimal!

    harvestAPY: BigDecimal!
    suppliersHarvestAPY: BigDecimal!
    borrowersHarvestAPY: BigDecimal!

    totalBorrowingSIGHAccuredBeforeThisSnapshot: BigDecimal!
    BorrowingSIGHAccuredDuringThisSnapshot: BigDecimal!

    totalLiquiditySIGHAccuredBeforeThisSnapshot: BigDecimal!
    LiquiditySIGHAccuredDuringThisSnapshot: BigDecimal!
}


# type SIGHSpeedController @entity {
#     "ID is contract address"
#     id: ID!
#     ProtocolAddress: Bytes!
#     TreasuryAddress: Bytes!
#     ProtocolDistributionSpeed: BigInt!
#     TreasuryDistributionSpeed: BigInt!
#     recentlyDrippedToProtocol: BigInt!
#     totalAmountDrippedToProtocol: BigInt!
#     recentlyDrippedToTreasury: BigInt!
#     totalAmountDrippedToTreasury: BigInt!
#     totalAmountDripped: BigInt!
#     ReservoirBalance: BigInt!
# }

# type SIGHTreasury @entity {
#     "ID is contract address"
#     id: ID!
#     sightroller_address: Bytes!
#     sigh_token: Bytes!

#     tokenBeingDripped: Bytes!
#     DripSpeed: BigInt!
#     isDripAllowed: Boolean!

#     maxTransferAmount: BigInt!

#     recentlySIGHBurned: BigInt!
#     totalSIGHBurned: BigInt!
# }

# # Sightroller global variables
# type Sightroller @entity {
#     "ID is set to 1"
#     id: ID!
#     "Address of price oracle the Sightroller uses, NewPriceOracle event "
#     priceOracle: Bytes
#     "Factor used to determine repayAmount for liquidating, NewCloseFactor event"
#     closeFactor: BigInt
#     "The percent bonus liquidators get for liquidating, NewLiquidationIncentive event"
#     liquidationIncentive: BigInt
#     "Max assets a single user can enter, NewMaxAssets event"
#     maxAssets: BigInt
#     "NewPauseGuardian event"
#     pauseGuardian: Bytes
#     "NewGsighRate event"
#     gsighRate: BigInt

#     sighRate: BigInt
# }






# # Supported Markets
# type Market @entity { 
#     "CToken address"
#     id: ID!
#     symbol: String!
#     name: String!
#     "The cToken contract balance of underlying asset"
#     cash: BigDecimal!
#     "Exchange rate of tokens / cTokens"
#     exchangeRate:  BigDecimal!

#     underlyingAddress: Bytes!
#     underlyingName: String!
#     "Underlying price of token in ETH (ex. 0.007 DAI)"
#     underlyingPrice: BigDecimal!
#     underlyingSymbol: String!
#     "Underlying token price in USD"
#     underlyingPriceUSD: BigDecimal!
#     "Underlying token decimal length"
#     underlyingDecimals: Int!

#     "CToken supply. CTokens have 8 decimals"
#     totalSupply: BigDecimal!

#     "Borrows (amount) in the market"
#     totalBorrows: BigDecimal!

#     "Reserves stored in the contract"
#     reserves: BigDecimal!

#     "Yearly borrow rate. With 2102400 blocks per year"
#     borrowRate: BigDecimal!

#     "Yearly supply rate. With 2104400 blocks per year"
#     supplyRate: BigDecimal!

#     "Collateral factor determining how much one can borrow"
#     collateralFactor: BigDecimal!

#     "Number of borrowers active in the market"
#     numberOfBorrowers: Int!

#     "Number of suppliers active in the market"
#     numberOfSuppliers: Int!

#     "Address of the interest rate model"
#     interestRateModelAddress: Bytes!

#     # Fields that are not in compounds api

#     "Block the market is updated to"
#     accrualBlockNumber: Int!

#     "Timestamp the market was most recently updated"
#     blockTimestamp: Int!

#     "The history of the markets borrow index return (Think S&P 500)"
#     borrowIndex: BigDecimal!

#     "The factor determining interest that goes to reserves"
#     reserveFactor: BigInt!

#     "Gsigh Distribution Speed, GsighSpeedUpdated event "
#     gsighSpeed: BigInt!

#     "DistributedSupplierGsigh event"
#     totalGsighDistributedToSuppliers: BigInt!

#     "DistributedBorrowerGsigh event"
#     totalGsighDistributedToBorrowers: BigInt!

#     "NewPendingAdmin event"
#     pendingAdmin: Bytes!

#     "NewAdmin event"
#     admin: Bytes!    

#     "NewSightroller event"
#     sightroller: Bytes!    

#     "SIGH Distribution Speed, SIGHSpeedUpdated event "
#     sighSpeed: BigInt!

#     blockNumberWhenSpeedWasUpdated: Int!

#     savePriceSnapshot: BigInt!

#     sighAccuredInCurrentCycle: BigInt!

# }






# # Users within the protocol
# type Account @entity {
#     "User wallet address"
#     id: ID!
#     "Array of markets user is in"
#     tokens: [UserAccount_IndividualMarketStats!]! @derivedFrom(field: "account")
#     "how many times user has been liquidated"
#     countLiquidated: Int!
#     "how many times user has liquidated others"
#     countLiquidator: Int!
#     "True if user has ever borrowed"
#     hasBorrowed: Boolean!

#     # The following values are added by the JS Wrapper, and must be calculated with the most up
#     # to date values based on the block delta for market.exchangeRate and market.borrowIndex
#     # They do not need to be in the schema, but they will show up in the explorer playground

#     # "If less than 1, the account can be liquidated
#     # health: BigDecimal!
#     # "Total assets supplied by user"
#     # totalBorrowValueInEth: BigDecimal!
#     # "Total assets borrowed from user"
#     # totalCollateralValueInEth: BigDecimal!
# }






# # Stats for an accounts borrow and supply of an asset
# type UserAccount_IndividualMarketStats @entity {
#     "Concatenation of CToken address and user address"
#     id: ID!
#     "Relation to market"
#     market: Market!
#     "Symbol of the cToken"
#     symbol: String!
#     "Relation to user"
#     account: Account!
#     "Hashes of all user transactions"
#     transactionHashes: [Bytes!]!
#     "Times of all user transactions"
#     transactionTimes: [Int!]!
#     "Block number this asset was updated at in the contract"
#     accrualBlockNumber: Int!
#     "True if user is entered, false if they are exited"
#     enteredMarket: Boolean!
#     "CToken balance of the user"
#     cTokenBalance: BigDecimal!
#     "Total amount of underlying supplied"
#     totalUnderlyingSupplied: BigDecimal!
#     "Total amount of underling redeemed"
#     totalUnderlyingRedeemed: BigDecimal!
#     "The value of the borrow index upon users last interaction"
#     accountBorrowIndex: BigDecimal!
#     "Total amount underlying borrowed, exclusive of interest"
#     totalUnderlyingBorrowed: BigDecimal!
#     "Total amount underlying repaid"
#     totalUnderlyingRepaid: BigDecimal!
#     "Current borrow balance stored in contract (exclusive of interest since accrualBlockNumber)"
#     storedBorrowBalance: BigDecimal!

#     # The following values are added by the JS Wrapper, and must be calculated with the most up
#     # to date values based on the block delta for market.exchangeRate and market.borrowIndex
#     # They do not need to be in the schema, but they will show up in the explorer playground

#     # supplyBalanceUnderlying: BigDecimal!
#     # FORMULA: supplyBalanceUnderlying = cTokenBalance * market.exchangeRate

#     # lifetimeSupplyInterestAccrued: BigDecimal!
#     # FORMULA: lifetimeSupplyInterestAccrued = supplyBalanceUnderlying - totalUnderlyingSupplied + totalUnderlyingRedeemed

#     # borrowBalanceUnderlying: BigDecimal!
#     # FORMULA: borrowBalanceUnderlying = storedBorrowBalance * market.borrowIndex / accountBorrowIndex

#     # lifetimeBorrowInterestAccrued: BigDecimal!
#     # FORMULA: lifetimeBorrowInterestAccrued = borrowBalanceUnderlying - totalUnderlyingBorrowed + totalUnderlyingRepaid
# }






# type TokenBalancesData @entity {
#     "Token Address is the ID"
#     id: ID!
#     symbol: String!
#     balance: BigInt!
#     totalDripped: BigInt!
# }
