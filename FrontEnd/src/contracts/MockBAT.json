{
  "contractName": "MockBAT",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/LendingProtocolContracts/mocks/tokens/MockBAT.sol\":\"MockBAT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/LendingProtocolContracts/mocks/tokens/MintableERC20.sol\":{\"keccak256\":\"0xfb610db4f7992959fc2e40acd464646a301b75e37b2f76a90e5d6287788491ac\",\"urls\":[\"bzz-raw://0e72113dba1f7c7522000c5c575f7ca5f68c2aa002862d526b19ad4c24e30e35\",\"dweb:/ipfs/QmfTkt3Vax2KhajrqCoJDgJdswkTVSDgrM3LsaNvHvXGgA\"]},\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/LendingProtocolContracts/mocks/tokens/MockBAT.sol\":{\"keccak256\":\"0xd80305b991323c8d86f13ce8b53774ebe8b4b4664c6a5846e4a39b1bc2e3747a\",\"urls\":[\"bzz-raw://08a35007c49638841e5f0ea6fdcbed5ee4905e060f5715ab1debd0c17140c192\",\"dweb:/ipfs/Qma3tLKfdSdH64eaSYMeCYhmZ5cdRn558sczMrx6kxZTf6\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xa5ce23dc71caa76caf782712dc8fef8dd2390c277f71e286474e9894d6ece97f\",\"urls\":[\"bzz-raw://cb14fd3bdc804349f070f0a372a2b6819bfe6e1b186080bb4850a1e1d024a16f\",\"dweb:/ipfs/Qmcp5Nhsq3PRRgXQYeqY41FMY1G2YbYC4JCWxFrst24MsC\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x7f293e2ee29a32416531a0bf3da9972358887c45ec1836642ec8e700cc152ba0\",\"urls\":[\"bzz-raw://e6ca40872864cb64a2dcc1b4f0be6a3cfc406f363e045fa7991f9f22f6257a63\",\"dweb:/ipfs/QmdsPdEayCcUa1fg3YTbhTPn3GTcjfNYZqnwf9EDC3QGpp\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe8ce903c4fcae44e7e17b5e6f9033a424a83936a4053f110dc30d3d6b10a64a5\",\"urls\":[\"bzz-raw://39e473abefa5257df715fc3c038485f1fb548422633610fbce5cf603c5adf9f5\",\"dweb:/ipfs/QmVh6qhTWAPfBZkdYrn9eLj3Zeig9GVcm83LmskZz7zsmg\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe92a180661a6e21051d45be08a572dbf8d61e04c142d4284e503f615aed587fd\",\"urls\":[\"bzz-raw://003c6da07a3cbc576a9a59f462ed67d9041ff89e106463817ce9f005e24d83c8\",\"dweb:/ipfs/QmemQazcc1Cww2Umgc4UFYpwF8WRqajPB6z5TNdC13XJCR\"]},\"openzeppelin-solidity/contracts/token/ERC20/Initializable.sol\":{\"keccak256\":\"0xe27817d107db2266b238a10e1e06f3304f3ec4b5c28968a83386ab7ba3859aee\",\"urls\":[\"bzz-raw://f245b0b4d4271f882624302b7ac88846080417d2f5ad27ea8b81fa77eacd016b\",\"dweb:/ipfs/Qmabm1XwR2D9U43Vk14zHzByhmhjmZZoVJFft6a3dpoVRh\"]}},\"version\":1}",
  "bytecode": "0x6119646068556015606a5560c0604052600360808190526210905560ea1b60a090815261002f91606b919061007a565b506040805180820190915260158082527f426173696320417474656e74696f6e20546f6b656e0000000000000000000000602090920191825261007491606c9161007a565b50610115565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100bb57805160ff19168380011785556100e8565b828001600101855582156100e8579182015b828111156100e85782518255916020019190600101906100cd565b506100f49291506100f8565b5090565b61011291905b808211156100f457600081556001016100fe565b90565b610c23806101246000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101fa57806395d89b4114610220578063a0712d6814610228578063a457c2d714610245578063a9059cbb14610271578063dd62ed3e1461029d576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101ce575b600080fd5b6100c16102cb565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610359565b604080519115158252519081900360200190f35b61017e610376565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037c565b61017e610409565b610162600480360360408110156101e457600080fd5b506001600160a01b03813516906020013561040f565b61017e6004803603602081101561021057600080fd5b50356001600160a01b0316610463565b6100c161047e565b6101626004803603602081101561023e57600080fd5b50356104d9565b6101626004803603604081101561025b57600080fd5b506001600160a01b038135169060200135610595565b6101626004803603604081101561028757600080fd5b506001600160a01b038135169060200135610603565b61017e600480360360408110156102b357600080fd5b506001600160a01b0381358116916020013516610617565b606c805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b505050505081565b600061036d610366610642565b8484610646565b50600192915050565b60355490565b6000610389848484610732565b6103ff84610395610642565b6103fa85604051806060016040528060288152602001610b36602891396001600160a01b038a166000908152603460205260408120906103d3610642565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61089016565b610646565b5060019392505050565b606a5481565b600061036d61041c610642565b846103fa856034600061042d610642565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61092716565b6001600160a01b031660009081526033602052604090205490565b606b805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103515780601f1061032657610100808354040283529160200191610351565b6000606a54600a0a62a986700282106105235760405162461bcd60e51b8152600401808060200182810382526023815260200180610bcc6023913960400191505060405180910390fd5b3360009081526069602052604090205460685443919091039081116105795760405162461bcd60e51b8152600401808060200182810382526050815260200180610ae66050913960600191505060405180910390fd5b33600081815260696020526040902043905561036d9084610988565b600061036d6105a2610642565b846103fa85604051806060016040528060258152602001610ba760259139603460006105cc610642565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61089016565b600061036d610610610642565b8484610732565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661068b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610b836024913960400191505060405180910390fd5b6001600160a01b0382166106d05760405162461bcd60e51b8152600401808060200182810382526022815260200180610a9e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107775760405162461bcd60e51b8152600401808060200182810382526025815260200180610b5e6025913960400191505060405180910390fd5b6001600160a01b0382166107bc5760405162461bcd60e51b8152600401808060200182810382526023815260200180610a7b6023913960400191505060405180910390fd5b6107ff81604051806060016040528060268152602001610ac0602691396001600160a01b038616600090815260336020526040902054919063ffffffff61089016565b6001600160a01b038085166000908152603360205260408082209390935590841681522054610834908263ffffffff61092716565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561091f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108e45781810151838201526020016108cc565b50505050905090810190601f1680156109115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610981576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166109e3576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6035546109f6908263ffffffff61092716565b6035556001600160a01b038216600090815260336020526040902054610a22908263ffffffff61092716565b6001600160a01b03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63653635303020426c6f636b73206e65656420746f20626520706173736564206265666f726520746f6b656e732063616e206265206d696e74656420616761696e206279207468652073616d65207573657245524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4d6178696d756d20313131313030303020546f6b656e732063616e206d696e7465642ea265627a7a72315820b52ab4270763ade11f0a9eb41d64a2a95fd8515ec4e227b5e9975c74f323589e64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101fa57806395d89b4114610220578063a0712d6814610228578063a457c2d714610245578063a9059cbb14610271578063dd62ed3e1461029d576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101ce575b600080fd5b6100c16102cb565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610359565b604080519115158252519081900360200190f35b61017e610376565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037c565b61017e610409565b610162600480360360408110156101e457600080fd5b506001600160a01b03813516906020013561040f565b61017e6004803603602081101561021057600080fd5b50356001600160a01b0316610463565b6100c161047e565b6101626004803603602081101561023e57600080fd5b50356104d9565b6101626004803603604081101561025b57600080fd5b506001600160a01b038135169060200135610595565b6101626004803603604081101561028757600080fd5b506001600160a01b038135169060200135610603565b61017e600480360360408110156102b357600080fd5b506001600160a01b0381358116916020013516610617565b606c805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b505050505081565b600061036d610366610642565b8484610646565b50600192915050565b60355490565b6000610389848484610732565b6103ff84610395610642565b6103fa85604051806060016040528060288152602001610b36602891396001600160a01b038a166000908152603460205260408120906103d3610642565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61089016565b610646565b5060019392505050565b606a5481565b600061036d61041c610642565b846103fa856034600061042d610642565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61092716565b6001600160a01b031660009081526033602052604090205490565b606b805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103515780601f1061032657610100808354040283529160200191610351565b6000606a54600a0a62a986700282106105235760405162461bcd60e51b8152600401808060200182810382526023815260200180610bcc6023913960400191505060405180910390fd5b3360009081526069602052604090205460685443919091039081116105795760405162461bcd60e51b8152600401808060200182810382526050815260200180610ae66050913960600191505060405180910390fd5b33600081815260696020526040902043905561036d9084610988565b600061036d6105a2610642565b846103fa85604051806060016040528060258152602001610ba760259139603460006105cc610642565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61089016565b600061036d610610610642565b8484610732565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661068b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610b836024913960400191505060405180910390fd5b6001600160a01b0382166106d05760405162461bcd60e51b8152600401808060200182810382526022815260200180610a9e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107775760405162461bcd60e51b8152600401808060200182810382526025815260200180610b5e6025913960400191505060405180910390fd5b6001600160a01b0382166107bc5760405162461bcd60e51b8152600401808060200182810382526023815260200180610a7b6023913960400191505060405180910390fd5b6107ff81604051806060016040528060268152602001610ac0602691396001600160a01b038616600090815260336020526040902054919063ffffffff61089016565b6001600160a01b038085166000908152603360205260408082209390935590841681522054610834908263ffffffff61092716565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561091f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108e45781810151838201526020016108cc565b50505050905090810190601f1680156109115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610981576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166109e3576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6035546109f6908263ffffffff61092716565b6035556001600160a01b038216600090815260336020526040902054610a22908263ffffffff61092716565b6001600160a01b03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63653635303020426c6f636b73206e65656420746f20626520706173736564206265666f726520746f6b656e732063616e206265206d696e74656420616761696e206279207468652073616d65207573657245524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4d6178696d756d20313131313030303020546f6b656e732063616e206d696e7465642ea265627a7a72315820b52ab4270763ade11f0a9eb41d64a2a95fd8515ec4e227b5e9975c74f323589e64736f6c63430005100032",
  "sourceMap": "122:4:55:-;100:26;;667:2;641:28;;675;59:697;675:28;;59:697;675:28;;;-1:-1:-1;;;675:28:55;;;;;;;;;;:::i;:::-;-1:-1:-1;709:44:55;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;59:697;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;59:697:55;;;-1:-1:-1;59:697:55;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "59:697:55:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:697:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;709:44:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2546:149:111;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2546:149:111;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1605:89;;;:::i;:::-;;;;;;;;;;;;;;;;3153:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3153:300:111;;;;;;;;;;;;;;;;;:::i;641:28:55:-;;;:::i;3848:207:111:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3848:207:111;;;;;;;;:::i;1752:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1752:108:111;-1:-1:-1;;;;;1752:108:111;;:::i;675:28:55:-;;;:::i;190:445::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;190:445:55;;:::i;4542:258:111:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4542:258:111;;;;;;;;:::i;2063:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2063:155:111;;;;;;;;:::i;2276:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2276:132:111;;;;;;;;;;:::i;709:44:55:-;;;;;;;;;;;;;;;-1:-1:-1;;709:44:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2546:149:111:-;2612:4;2628:39;2637:12;:10;:12::i;:::-;2651:7;2660:6;2628:8;:39::i;:::-;-1:-1:-1;2684:4:111;2546:149;;;;:::o;1605:89::-;1675:12;;1605:89;:::o;3153:300::-;3242:4;3258:36;3268:6;3276:9;3287:6;3258:9;:36::i;:::-;3304:121;3313:6;3321:12;:10;:12::i;:::-;3335:89;3373:6;3335:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3335:19:111;;;;;;:11;:19;;;;;;3355:12;:10;:12::i;:::-;-1:-1:-1;;;;;3335:33:111;;;;;;;;;;;;-1:-1:-1;3335:33:111;;;:89;;:37;:89;:::i;:::-;3304:8;:121::i;:::-;-1:-1:-1;3442:4:111;3153:300;;;;;:::o;641:28:55:-;;;;:::o;3848:207:111:-;3928:4;3944:83;3953:12;:10;:12::i;:::-;3967:7;3976:50;4015:10;3976:11;:25;3988:12;:10;:12::i;:::-;-1:-1:-1;;;;;3976:25:111;;;;;;;;;;;;;;;;;-1:-1:-1;3976:25:111;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1752:108::-;-1:-1:-1;;;;;1835:18:111;1809:7;1835:18;;;:9;:18;;;;;;;1752:108::o;675:28:55:-;;;;;;;;;;;;;;;-1:-1:-1;;675:28:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;190:445;235:4;282:8;;278:2;:12;267:8;:23;259:5;:31;251:78;;;;-1:-1:-1;;;251:78:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;385:10;339:16;373:23;;;:11;:23;;;;;;414:11;;358:12;:38;;;;;414:25;-1:-1:-1;406:117:55;;;;-1:-1:-1;;;406:117:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;547:10;535:23;;;;:11;:23;;;;;561:12;535:38;;583:24;;601:5;583;:24::i;4542:258:111:-;4627:4;4643:129;4652:12;:10;:12::i;:::-;4666:7;4675:96;4714:15;4675:96;;;;;;;;;;;;;;;;;:11;:25;4687:12;:10;:12::i;:::-;-1:-1:-1;;;;;4675:25:111;;;;;;;;;;;;;;;;;-1:-1:-1;4675:25:111;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2063:155::-;2132:4;2148:42;2158:12;:10;:12::i;:::-;2172:9;2183:6;2148:9;:42::i;2276:132::-;-1:-1:-1;;;;;2374:18:111;;;2348:7;2374:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2276:132::o;788:96:109:-;867:10;788:96;:::o;7396:332:111:-;-1:-1:-1;;;;;7489:19:111;;7481:68;;;;-1:-1:-1;;;7481:68:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7567:21:111;;7559:68;;;;-1:-1:-1;;;7559:68:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7638:18:111;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7689:32;;;;;;;;;;;;;;;;;7396:332;;;:::o;5274:464::-;-1:-1:-1;;;;;5371:20:111;;5363:70;;;;-1:-1:-1;;;5363:70:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5451:23:111;;5443:71;;;;-1:-1:-1;;;5443:71:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5545;5567:6;5545:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5545:17:111;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5525:17:111;;;;;;;:9;:17;;;;;;:91;;;;5649:20;;;;;;;:32;;5674:6;5649:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5626:20:111;;;;;;;:9;:20;;;;;;;;;:55;;;;5696:35;;;;;;;5626:20;;5696:35;;;;;;;;;;;;;5274:464;;;:::o;1746:187:110:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:110;;;1746:187::o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:110:o;6008:302:111:-;-1:-1:-1;;;;;6083:21:111;;6075:65;;;;;-1:-1:-1;;;6075:65:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;6166:12;;:24;;6183:6;6166:24;:16;:24;:::i;:::-;6151:12;:39;-1:-1:-1;;;;;6221:18:111;;;;;;:9;:18;;;;;;:30;;6244:6;6221:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6200:18:111;;;;;;:9;:18;;;;;;;;:51;;;;6266:37;;;;;;;6200:18;;;;6266:37;;;;;;;;;;6008:302;;:::o",
  "source": "pragma solidity ^0.5.0;\n\n\nimport \"./MintableERC20.sol\";\n\n\n\ncontract MockBAT is MintableERC20 {\n\n    uint256 minBlockGap = 6500;\n    mapping(address => uint256) private mintHistory;\n    \n    function mint(uint256 value) public returns (bool) {\n        require(value < 11110000 * 10**decimals,\"Maximum 11110000 Tokens can minted.\");\n        uint deltaBlocks = block.number - mintHistory[msg.sender];\n        require(minBlockGap < deltaBlocks,\"6500 Blocks need to be passed before tokens can be minted again by the same user\");  \n        mintHistory[msg.sender] = block.number;\n        _mint(msg.sender, value);\n        return true;\n    }\n\n    uint256 public decimals = 21;\n    string public symbol = \"BAT\";\n    string public name = \"Basic Attention Token\";\n}",
  "sourcePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/LendingProtocolContracts/mocks/tokens/MockBAT.sol",
  "ast": {
    "absolutePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/LendingProtocolContracts/mocks/tokens/MockBAT.sol",
    "exportedSymbols": {
      "MockBAT": [
        16797
      ]
    },
    "id": 16798,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16725,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:55"
      },
      {
        "absolutePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/LendingProtocolContracts/mocks/tokens/MintableERC20.sol",
        "file": "./MintableERC20.sol",
        "id": 16726,
        "nodeType": "ImportDirective",
        "scope": 16798,
        "sourceUnit": 16724,
        "src": "26:29:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16727,
              "name": "MintableERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16723,
              "src": "79:13:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableERC20_$16723",
                "typeString": "contract MintableERC20"
              }
            },
            "id": 16728,
            "nodeType": "InheritanceSpecifier",
            "src": "79:13:55"
          }
        ],
        "contractDependencies": [
          16723,
          36373,
          36972,
          37099,
          37162
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 16797,
        "linearizedBaseContracts": [
          16797,
          16723,
          36972,
          37099,
          36373,
          37162
        ],
        "name": "MockBAT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 16731,
            "name": "minBlockGap",
            "nodeType": "VariableDeclaration",
            "scope": 16797,
            "src": "100:26:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16729,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "100:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "36353030",
              "id": 16730,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "122:4:55",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6500_by_1",
                "typeString": "int_const 6500"
              },
              "value": "6500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16735,
            "name": "mintHistory",
            "nodeType": "VariableDeclaration",
            "scope": 16797,
            "src": "132:47:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 16734,
              "keyType": {
                "id": 16732,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "140:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "132:27:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 16733,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "151:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 16786,
              "nodeType": "Block",
              "src": "241:394:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 16743,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16737,
                          "src": "259:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3131313130303030",
                            "id": 16744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "267:8:55",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_11110000_by_1",
                              "typeString": "int_const 11110000"
                            },
                            "value": "11110000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 16747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 16745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "278:2:55",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 16746,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16790,
                              "src": "282:8:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "278:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "267:23:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "259:31:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6178696d756d20313131313030303020546f6b656e732063616e206d696e7465642e",
                        "id": 16750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "291:37:55",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb0722f62a9230f2d7a8d3ef7120fd3fcb65db9852ea32905b57edf81c6ff831",
                          "typeString": "literal_string \"Maximum 11110000 Tokens can minted.\""
                        },
                        "value": "Maximum 11110000 Tokens can minted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb0722f62a9230f2d7a8d3ef7120fd3fcb65db9852ea32905b57edf81c6ff831",
                          "typeString": "literal_string \"Maximum 11110000 Tokens can minted.\""
                        }
                      ],
                      "id": 16742,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37626,
                        37627
                      ],
                      "referencedDeclaration": 37627,
                      "src": "251:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "251:78:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16752,
                  "nodeType": "ExpressionStatement",
                  "src": "251:78:55"
                },
                {
                  "assignments": [
                    16754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16754,
                      "name": "deltaBlocks",
                      "nodeType": "VariableDeclaration",
                      "scope": 16786,
                      "src": "339:16:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16753,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "339:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 16762,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 16755,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37613,
                        "src": "358:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 16756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "358:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 16757,
                        "name": "mintHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16735,
                        "src": "373:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16760,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16758,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37623,
                          "src": "385:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "385:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "373:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "358:38:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "339:57:55"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 16764,
                          "name": "minBlockGap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16731,
                          "src": "414:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 16765,
                          "name": "deltaBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16754,
                          "src": "428:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "414:25:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3635303020426c6f636b73206e65656420746f20626520706173736564206265666f726520746f6b656e732063616e206265206d696e74656420616761696e206279207468652073616d652075736572",
                        "id": 16767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "440:82:55",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53c27735589dc6d7ec32937af3e48a350542e993f3948a7345d0c0a4e3b5eead",
                          "typeString": "literal_string \"6500 Blocks need to be passed before tokens can be minted again by the same user\""
                        },
                        "value": "6500 Blocks need to be passed before tokens can be minted again by the same user"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53c27735589dc6d7ec32937af3e48a350542e993f3948a7345d0c0a4e3b5eead",
                          "typeString": "literal_string \"6500 Blocks need to be passed before tokens can be minted again by the same user\""
                        }
                      ],
                      "id": 16763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37626,
                        37627
                      ],
                      "referencedDeclaration": 37627,
                      "src": "406:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "406:117:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16769,
                  "nodeType": "ExpressionStatement",
                  "src": "406:117:55"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 16770,
                        "name": "mintHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16735,
                        "src": "535:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16773,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16771,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37623,
                          "src": "547:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "547:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "535:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 16774,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37613,
                        "src": "561:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 16775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "561:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "535:38:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16777,
                  "nodeType": "ExpressionStatement",
                  "src": "535:38:55"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16779,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37623,
                          "src": "589:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "589:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16781,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16737,
                        "src": "601:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16778,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36852,
                      "src": "583:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 16782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "583:24:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16783,
                  "nodeType": "ExpressionStatement",
                  "src": "583:24:55"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 16784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "624:4:55",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 16741,
                  "id": 16785,
                  "nodeType": "Return",
                  "src": "617:11:55"
                }
              ]
            },
            "documentation": null,
            "id": 16787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16737,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 16787,
                  "src": "204:13:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "204:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "203:15:55"
            },
            "returnParameters": {
              "id": 16741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16740,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16787,
                  "src": "235:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "234:6:55"
            },
            "scope": 16797,
            "src": "190:445:55",
            "stateMutability": "nonpayable",
            "superFunction": 16722,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16790,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 16797,
            "src": "641:28:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16788,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "641:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3231",
              "id": 16789,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "667:2:55",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21_by_1",
                "typeString": "int_const 21"
              },
              "value": "21"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16793,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 16797,
            "src": "675:28:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16791,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "675:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "424154",
              "id": 16792,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "698:5:55",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3ec6762bdf44eb044276fec7d12c1bb640cb139cfd533f93eeebba5414f5db55",
                "typeString": "literal_string \"BAT\""
              },
              "value": "BAT"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16796,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 16797,
            "src": "709:44:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16794,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "709:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "426173696320417474656e74696f6e20546f6b656e",
              "id": 16795,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "730:23:55",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_cb876cf8ff8a932e02982aa05871800ef51c4198c3c1115d0a5d8bb79e06afe4",
                "typeString": "literal_string \"Basic Attention Token\""
              },
              "value": "Basic Attention Token"
            },
            "visibility": "public"
          }
        ],
        "scope": 16798,
        "src": "59:697:55"
      }
    ],
    "src": "0:756:55"
  },
  "legacyAST": {
    "absolutePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/LendingProtocolContracts/mocks/tokens/MockBAT.sol",
    "exportedSymbols": {
      "MockBAT": [
        16797
      ]
    },
    "id": 16798,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16725,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:55"
      },
      {
        "absolutePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/LendingProtocolContracts/mocks/tokens/MintableERC20.sol",
        "file": "./MintableERC20.sol",
        "id": 16726,
        "nodeType": "ImportDirective",
        "scope": 16798,
        "sourceUnit": 16724,
        "src": "26:29:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16727,
              "name": "MintableERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16723,
              "src": "79:13:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableERC20_$16723",
                "typeString": "contract MintableERC20"
              }
            },
            "id": 16728,
            "nodeType": "InheritanceSpecifier",
            "src": "79:13:55"
          }
        ],
        "contractDependencies": [
          16723,
          36373,
          36972,
          37099,
          37162
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 16797,
        "linearizedBaseContracts": [
          16797,
          16723,
          36972,
          37099,
          36373,
          37162
        ],
        "name": "MockBAT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 16731,
            "name": "minBlockGap",
            "nodeType": "VariableDeclaration",
            "scope": 16797,
            "src": "100:26:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16729,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "100:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "36353030",
              "id": 16730,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "122:4:55",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6500_by_1",
                "typeString": "int_const 6500"
              },
              "value": "6500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16735,
            "name": "mintHistory",
            "nodeType": "VariableDeclaration",
            "scope": 16797,
            "src": "132:47:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 16734,
              "keyType": {
                "id": 16732,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "140:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "132:27:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 16733,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "151:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 16786,
              "nodeType": "Block",
              "src": "241:394:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 16743,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16737,
                          "src": "259:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3131313130303030",
                            "id": 16744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "267:8:55",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_11110000_by_1",
                              "typeString": "int_const 11110000"
                            },
                            "value": "11110000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 16747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 16745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "278:2:55",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 16746,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16790,
                              "src": "282:8:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "278:12:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "267:23:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "259:31:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6178696d756d20313131313030303020546f6b656e732063616e206d696e7465642e",
                        "id": 16750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "291:37:55",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb0722f62a9230f2d7a8d3ef7120fd3fcb65db9852ea32905b57edf81c6ff831",
                          "typeString": "literal_string \"Maximum 11110000 Tokens can minted.\""
                        },
                        "value": "Maximum 11110000 Tokens can minted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb0722f62a9230f2d7a8d3ef7120fd3fcb65db9852ea32905b57edf81c6ff831",
                          "typeString": "literal_string \"Maximum 11110000 Tokens can minted.\""
                        }
                      ],
                      "id": 16742,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37626,
                        37627
                      ],
                      "referencedDeclaration": 37627,
                      "src": "251:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "251:78:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16752,
                  "nodeType": "ExpressionStatement",
                  "src": "251:78:55"
                },
                {
                  "assignments": [
                    16754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16754,
                      "name": "deltaBlocks",
                      "nodeType": "VariableDeclaration",
                      "scope": 16786,
                      "src": "339:16:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16753,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "339:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 16762,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 16755,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37613,
                        "src": "358:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 16756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "358:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 16757,
                        "name": "mintHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16735,
                        "src": "373:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16760,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16758,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37623,
                          "src": "385:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "385:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "373:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "358:38:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "339:57:55"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 16764,
                          "name": "minBlockGap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16731,
                          "src": "414:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 16765,
                          "name": "deltaBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16754,
                          "src": "428:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "414:25:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3635303020426c6f636b73206e65656420746f20626520706173736564206265666f726520746f6b656e732063616e206265206d696e74656420616761696e206279207468652073616d652075736572",
                        "id": 16767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "440:82:55",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53c27735589dc6d7ec32937af3e48a350542e993f3948a7345d0c0a4e3b5eead",
                          "typeString": "literal_string \"6500 Blocks need to be passed before tokens can be minted again by the same user\""
                        },
                        "value": "6500 Blocks need to be passed before tokens can be minted again by the same user"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53c27735589dc6d7ec32937af3e48a350542e993f3948a7345d0c0a4e3b5eead",
                          "typeString": "literal_string \"6500 Blocks need to be passed before tokens can be minted again by the same user\""
                        }
                      ],
                      "id": 16763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37626,
                        37627
                      ],
                      "referencedDeclaration": 37627,
                      "src": "406:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "406:117:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16769,
                  "nodeType": "ExpressionStatement",
                  "src": "406:117:55"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 16770,
                        "name": "mintHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16735,
                        "src": "535:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16773,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16771,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37623,
                          "src": "547:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "547:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "535:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 16774,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37613,
                        "src": "561:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 16775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "561:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "535:38:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16777,
                  "nodeType": "ExpressionStatement",
                  "src": "535:38:55"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16779,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37623,
                          "src": "589:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "589:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16781,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16737,
                        "src": "601:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16778,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36852,
                      "src": "583:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 16782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "583:24:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16783,
                  "nodeType": "ExpressionStatement",
                  "src": "583:24:55"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 16784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "624:4:55",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 16741,
                  "id": 16785,
                  "nodeType": "Return",
                  "src": "617:11:55"
                }
              ]
            },
            "documentation": null,
            "id": 16787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16737,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 16787,
                  "src": "204:13:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "204:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "203:15:55"
            },
            "returnParameters": {
              "id": 16741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16740,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16787,
                  "src": "235:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "234:6:55"
            },
            "scope": 16797,
            "src": "190:445:55",
            "stateMutability": "nonpayable",
            "superFunction": 16722,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16790,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 16797,
            "src": "641:28:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16788,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "641:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3231",
              "id": 16789,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "667:2:55",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21_by_1",
                "typeString": "int_const 21"
              },
              "value": "21"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16793,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 16797,
            "src": "675:28:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16791,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "675:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "424154",
              "id": 16792,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "698:5:55",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3ec6762bdf44eb044276fec7d12c1bb640cb139cfd533f93eeebba5414f5db55",
                "typeString": "literal_string \"BAT\""
              },
              "value": "BAT"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16796,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 16797,
            "src": "709:44:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16794,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "709:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "426173696320417474656e74696f6e20546f6b656e",
              "id": 16795,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "730:23:55",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_cb876cf8ff8a932e02982aa05871800ef51c4198c3c1115d0a5d8bb79e06afe4",
                "typeString": "literal_string \"Basic Attention Token\""
              },
              "value": "Basic Attention Token"
            },
            "visibility": "public"
          }
        ],
        "scope": 16798,
        "src": "59:697:55"
      }
    ],
    "src": "0:756:55"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.4",
  "updatedAt": "2021-01-05T05:29:52.488Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}