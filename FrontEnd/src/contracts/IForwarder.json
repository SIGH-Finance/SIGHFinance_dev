{
  "contractName": "IForwarder",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "assetData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAsset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "assetData",
          "type": "bytes"
        }
      ],
      "name": "approveMakerAssetProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ethFeeAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address payable[]",
          "name": "feeRecipients",
          "type": "address[]"
        }
      ],
      "name": "marketSellOrdersWithEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "wethSpentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "makerAssetAcquiredAmount",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "makerAssetBuyAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ethFeeAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address payable[]",
          "name": "feeRecipients",
          "type": "address[]"
        }
      ],
      "name": "marketBuyOrdersWithEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "wethSpentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "makerAssetAcquiredAmount",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"assetData\",\"type\":\"bytes\"}],\"name\":\"approveMakerAssetProxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ethFeeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address payable[]\",\"name\":\"feeRecipients\",\"type\":\"address[]\"}],\"name\":\"marketBuyOrdersWithEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"wethSpentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAcquiredAmount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ethFeeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address payable[]\",\"name\":\"feeRecipients\",\"type\":\"address[]\"}],\"name\":\"marketSellOrdersWithEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"wethSpentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAcquiredAmount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"assetData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAsset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approveMakerAssetProxy(bytes)\":{\"details\":\"Approves the respective proxy for a given asset to transfer tokens on the Forwarder contract's behalf.      This is necessary because an order fee denominated in the maker asset (i.e. a percentage fee) is sent by the      Forwarder contract to the fee recipient.      This method needs to be called before forwarding orders of a maker asset that hasn't      previously been approved.\",\"params\":{\"assetData\":\"Byte array encoded for the respective asset proxy.\"}},\"marketBuyOrdersWithEth((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],uint256,bytes[],uint256[],address[])\":{\"details\":\"Attempt to buy makerAssetBuyAmount of makerAsset by selling ETH provided with transaction.      The Forwarder may *fill* more than makerAssetBuyAmount of the makerAsset so that it can      pay takerFees where takerFeeAssetData == makerAssetData (i.e. percentage fees).      Any ETH not spent will be refunded to sender.\",\"params\":{\"ethFeeAmounts\":\"Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\",\"feeRecipients\":\"Addresses that will receive ETH when orders are filled.\",\"makerAssetBuyAmount\":\"Desired amount of makerAsset to purchase.\",\"orders\":\"Array of order specifications used containing desired makerAsset and WETH as takerAsset.\",\"signatures\":\"Proofs that orders have been created by makers.\"},\"return\":\"wethSpentAmount Amount of WETH spent on the given set of orders.makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.\"},\"marketSellOrdersWithEth((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256[],address[])\":{\"details\":\"Purchases as much of orders' makerAssets as possible by selling as much of the ETH value sent      as possible, accounting for order and forwarder fees.\",\"params\":{\"ethFeeAmounts\":\"Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\",\"feeRecipients\":\"Addresses that will receive ETH when orders are filled.\",\"orders\":\"Array of order specifications used containing desired makerAsset and WETH as takerAsset.\",\"signatures\":\"Proofs that orders have been created by makers.\"},\"return\":\"wethSpentAmount Amount of WETH spent on the given set of orders.makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.\"},\"withdrawAsset(bytes,uint256)\":{\"details\":\"Withdraws assets from this contract. The contract requires a ZRX balance in order to      function optimally, and this function allows the ZRX to be withdrawn by owner. It may also be      used to withdraw assets that were accidentally sent to this contract.\",\"params\":{\"amount\":\"Amount of ERC20 token to withdraw.\",\"assetData\":\"Byte array encoded for the respective asset proxy.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/IForwarder.sol\":\"IForwarder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibEIP712.sol\":{\"keccak256\":\"0xe19c3cbc71fbea0fdb45c1763306550015d940bea9dbec5f3fd2edfe2165d673\",\"urls\":[\"bzz-raw://267d263f0453352a1ac8d8085a13c4976fb8c964eff8d3aab0a84173d1438efb\",\"dweb:/ipfs/QmbaRw85MYYP3KTmQ68gYdEnFyMqD7frwjxxwsj4j4JCr1\"]},\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibFillResults.sol\":{\"keccak256\":\"0xb3c2c233d4aca372c4306d35b6b805e0f577ae927264821deae6015ee54ff3c2\",\"urls\":[\"bzz-raw://f5d825334bc205f7fce1ce761a5e7cf37df8c1af5a95cef1dbfd6274d51657cb\",\"dweb:/ipfs/QmPdeEFeJA8oCVA5RyjKhZWPxf14LJdVQMT2KLcQ7UbUPo\"]},\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibMath.sol\":{\"keccak256\":\"0x6bd90e5c83d34d21a466a41d6f57a0547b49505d4be5dd61447a7d1dc21f9f25\",\"urls\":[\"bzz-raw://e1cb22812e006da65f243d561c7e0fcc4b8ee99852f45bec0d23547c1a3d4370\",\"dweb:/ipfs/QmTYS7ZxhZaJe6heYP2jyoykCPPJ9ufUv7xdPa2nM5JcQ2\"]},\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibMathRichErrors.sol\":{\"keccak256\":\"0xd2d047534facd6051467dd7a22d7ee9fd4e54e63bb5a5fae2511eac7332fad3d\",\"urls\":[\"bzz-raw://5e0aeedd55c996fd72004a14f5c528ed60b46631ca9599bbb7925c8342ca3be4\",\"dweb:/ipfs/QmNi1ozt4sYmn4pCobjU7FQ4KGUvK77pCyWUtbD18uQgVm\"]},\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibOrder.sol\":{\"keccak256\":\"0xc7f3f4488ec75bd34fa0acf0c213d3076cdc30a6bb8a56958ca16475c08b59a9\",\"urls\":[\"bzz-raw://7d81dd68b6136765d49a53e8a67a2f4550001d20a142272afc0e9efd65d7193f\",\"dweb:/ipfs/Qmb4S8jZNkw6AB1ai91rHjCgWbtsqvxN5hLdBEYvfuNAeF\"]},\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibRichErrors.sol\":{\"keccak256\":\"0xe3ce6ded2fea3cc80998ca4d364bda530e273af0ba1c78d22a6cdadb6f64186e\",\"urls\":[\"bzz-raw://8239629dbcee9797a8f8157f03c2b78827b446787b4d53b3033a3e1ab538ad0b\",\"dweb:/ipfs/QmbttkX94CxMkS6t1K4He5bNwGKCRUhKqTt9pNsAL5ynst\"]},\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibSafeMath.sol\":{\"keccak256\":\"0xd0da9ac1905381832f6612774cb7eced3b4b60459d6bafa59f5424955b44c935\",\"urls\":[\"bzz-raw://ede4bbe2dac43c6cc4e3b7a22285e00d55b31fb8cc00b375c6ac4714298b7e6d\",\"dweb:/ipfs/QmWbN5qbJSNYrMMZMugaH5itTVSexe9yPsCPuArQVCLUgi\"]},\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibSafeMathRichErrors.sol\":{\"keccak256\":\"0xcf6adae04bd7af8e41fcd40ad148cc3d1cd5596bd42b01961b735c9b416a6572\",\"urls\":[\"bzz-raw://103791140e631e9d670bbc99e5f8e546f56061c5d49de97754006ce2c252d61e\",\"dweb:/ipfs/QmeRMyYFSk7n1sLzRSGqxcoX1sKQSdAQya6bRy6nseu6xX\"]},\"/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/IForwarder.sol\":{\"keccak256\":\"0x3fce16a105cb31fb0e150af634a787b1bdc5435cd6cad9096a55ca677b82fa4a\",\"urls\":[\"bzz-raw://ca87d7f8fa8e10fb9b02ea0b9b4ee3b6fef7fdb7ed5551cd4ada9fa96c46fab3\",\"dweb:/ipfs/QmWx2VLi5PnaT2gE8zaMTibePwRZFa8vkUHXCq7TGSHv9c\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n\n  Copyright 2019 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"./0xContracts/LibOrder.sol\";\nimport \"./0xContracts/LibFillResults.sol\";\n\n\ncontract IForwarder {\n    \n    /// @dev Withdraws assets from this contract. The contract requires a ZRX balance in order to\n    ///      function optimally, and this function allows the ZRX to be withdrawn by owner. It may also be\n    ///      used to withdraw assets that were accidentally sent to this contract.\n    /// @param assetData Byte array encoded for the respective asset proxy.\n    /// @param amount Amount of ERC20 token to withdraw.\n    function withdrawAsset(\n        bytes calldata assetData,\n        uint256 amount\n    )\n        external;\n\n        /// @dev Approves the respective proxy for a given asset to transfer tokens on the Forwarder contract's behalf.\n        ///      This is necessary because an order fee denominated in the maker asset (i.e. a percentage fee) is sent by the\n        ///      Forwarder contract to the fee recipient.\n        ///      This method needs to be called before forwarding orders of a maker asset that hasn't\n        ///      previously been approved.\n        /// @param assetData Byte array encoded for the respective asset proxy.\n    function approveMakerAssetProxy(\n        bytes calldata assetData\n    )\n        external;\n\n    /// @dev Purchases as much of orders' makerAssets as possible by selling as much of the ETH value sent\n    ///      as possible, accounting for order and forwarder fees.\n    /// @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n    /// @param signatures Proofs that orders have been created by makers.\n    /// @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n    /// @param feeRecipients Addresses that will receive ETH when orders are filled.\n    /// @return wethSpentAmount Amount of WETH spent on the given set of orders.\n    /// @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.\n    function marketSellOrdersWithEth(\n        LibOrder.Order[] memory orders,\n        bytes[] memory signatures,\n        uint256[] memory ethFeeAmounts,\n        address payable[] memory feeRecipients\n    )\n        public\n        payable\n        returns (\n            uint256 wethSpentAmount,\n            uint256 makerAssetAcquiredAmount\n        );\n\n    /// @dev Attempt to buy makerAssetBuyAmount of makerAsset by selling ETH provided with transaction.\n    ///      The Forwarder may *fill* more than makerAssetBuyAmount of the makerAsset so that it can\n    ///      pay takerFees where takerFeeAssetData == makerAssetData (i.e. percentage fees).\n    ///      Any ETH not spent will be refunded to sender.\n    /// @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n    /// @param makerAssetBuyAmount Desired amount of makerAsset to purchase.\n    /// @param signatures Proofs that orders have been created by makers.\n    /// @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n    /// @param feeRecipients Addresses that will receive ETH when orders are filled.\n    /// @return wethSpentAmount Amount of WETH spent on the given set of orders.\n    /// @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.\n    function marketBuyOrdersWithEth(\n        LibOrder.Order[] memory orders,\n        uint256 makerAssetBuyAmount,\n        bytes[] memory signatures,\n        uint256[] memory ethFeeAmounts,\n        address payable[] memory feeRecipients\n    )\n        public\n        payable\n        returns (\n            uint256 wethSpentAmount,\n            uint256 makerAssetAcquiredAmount\n        );\n}\n",
  "sourcePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/IForwarder.sol",
  "ast": {
    "absolutePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/IForwarder.sol",
    "exportedSymbols": {
      "IForwarder": [
        26925
      ]
    },
    "id": 26926,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 26869,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:91"
      },
      {
        "id": 26870,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:91"
      },
      {
        "absolutePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibOrder.sol",
        "file": "./0xContracts/LibOrder.sol",
        "id": 26871,
        "nodeType": "ImportDirective",
        "scope": 26926,
        "sourceUnit": 26505,
        "src": "639:36:91",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibFillResults.sol",
        "file": "./0xContracts/LibFillResults.sol",
        "id": 26872,
        "nodeType": "ImportDirective",
        "scope": 26926,
        "sourceUnit": 26079,
        "src": "676:42:91",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 26925,
        "linearizedBaseContracts": [
          26925
        ],
        "name": "IForwarder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Withdraws assets from this contract. The contract requires a ZRX balance in order to\n      function optimally, and this function allows the ZRX to be withdrawn by owner. It may also be\n      used to withdraw assets that were accidentally sent to this contract.\n @param assetData Byte array encoded for the respective asset proxy.\n @param amount Amount of ERC20 token to withdraw.",
            "id": 26879,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAsset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26874,
                  "name": "assetData",
                  "nodeType": "VariableDeclaration",
                  "scope": 26879,
                  "src": "1205:24:91",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26873,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:5:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26876,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26879,
                  "src": "1239:14:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1195:64:91"
            },
            "returnParameters": {
              "id": 26878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:0:91"
            },
            "scope": 26925,
            "src": "1173:104:91",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Approves the respective proxy for a given asset to transfer tokens on the Forwarder contract's behalf.\n      This is necessary because an order fee denominated in the maker asset (i.e. a percentage fee) is sent by the\n      Forwarder contract to the fee recipient.\n      This method needs to be called before forwarding orders of a maker asset that hasn't\n      previously been approved.\n @param assetData Byte array encoded for the respective asset proxy.",
            "id": 26884,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveMakerAssetProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26881,
                  "name": "assetData",
                  "nodeType": "VariableDeclaration",
                  "scope": 26884,
                  "src": "1853:24:91",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26880,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:5:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1843:40:91"
            },
            "returnParameters": {
              "id": 26883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1900:0:91"
            },
            "scope": 26925,
            "src": "1812:89:91",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Purchases as much of orders' makerAssets as possible by selling as much of the ETH value sent\n      as possible, accounting for order and forwarder fees.\n @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n @param signatures Proofs that orders have been created by makers.\n @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n @param feeRecipients Addresses that will receive ETH when orders are filled.\n @return wethSpentAmount Amount of WETH spent on the given set of orders.\n @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.",
            "id": 26903,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketSellOrdersWithEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26887,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2687:30:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$26439_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 26885,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 26439,
                      "src": "2687:14:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$26439_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 26886,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2687:16:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$26439_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26890,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2727:25:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26888,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2727:5:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 26889,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2727:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26893,
                  "name": "ethFeeAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2762:30:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26891,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2762:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 26892,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2762:9:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26896,
                  "name": "feeRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2802:38:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26894,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2802:15:91",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 26895,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2802:17:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2677:169:91"
            },
            "returnParameters": {
              "id": 26902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26899,
                  "name": "wethSpentAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2908:23:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2908:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26901,
                  "name": "makerAssetAcquiredAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2945:32:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2894:93:91"
            },
            "scope": 26925,
            "src": "2645:343:91",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Attempt to buy makerAssetBuyAmount of makerAsset by selling ETH provided with transaction.\n      The Forwarder may *fill* more than makerAssetBuyAmount of the makerAsset so that it can\n      pay takerFees where takerFeeAssetData == makerAssetData (i.e. percentage fees).\n      Any ETH not spent will be refunded to sender.\n @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n @param makerAssetBuyAmount Desired amount of makerAsset to purchase.\n @param signatures Proofs that orders have been created by makers.\n @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n @param feeRecipients Addresses that will receive ETH when orders are filled.\n @return wethSpentAmount Amount of WETH spent on the given set of orders.\n @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.",
            "id": 26924,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketBuyOrdersWithEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26906,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4033:30:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$26439_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 26904,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 26439,
                      "src": "4033:14:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$26439_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 26905,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4033:16:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$26439_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26908,
                  "name": "makerAssetBuyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4073:27:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4073:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26911,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4110:25:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26909,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4110:5:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 26910,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4110:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26914,
                  "name": "ethFeeAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4145:30:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26912,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4145:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 26913,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4145:9:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26917,
                  "name": "feeRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4185:38:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26915,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4185:15:91",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 26916,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4185:17:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4023:206:91"
            },
            "returnParameters": {
              "id": 26923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26920,
                  "name": "wethSpentAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4291:23:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4291:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26922,
                  "name": "makerAssetAcquiredAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4328:32:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4328:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4277:93:91"
            },
            "scope": 26925,
            "src": "3992:379:91",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 26926,
        "src": "721:3652:91"
      }
    ],
    "src": "580:3794:91"
  },
  "legacyAST": {
    "absolutePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/IForwarder.sol",
    "exportedSymbols": {
      "IForwarder": [
        26925
      ]
    },
    "id": 26926,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 26869,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:91"
      },
      {
        "id": 26870,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:91"
      },
      {
        "absolutePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibOrder.sol",
        "file": "./0xContracts/LibOrder.sol",
        "id": 26871,
        "nodeType": "ImportDirective",
        "scope": 26926,
        "sourceUnit": 26505,
        "src": "639:36:91",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/apple/Desktop/GITCOIN/Sigh_Finance/SighFinanceContracts/contracts/SIGHFinanceContracts/Treasury/0xContracts/LibFillResults.sol",
        "file": "./0xContracts/LibFillResults.sol",
        "id": 26872,
        "nodeType": "ImportDirective",
        "scope": 26926,
        "sourceUnit": 26079,
        "src": "676:42:91",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 26925,
        "linearizedBaseContracts": [
          26925
        ],
        "name": "IForwarder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Withdraws assets from this contract. The contract requires a ZRX balance in order to\n      function optimally, and this function allows the ZRX to be withdrawn by owner. It may also be\n      used to withdraw assets that were accidentally sent to this contract.\n @param assetData Byte array encoded for the respective asset proxy.\n @param amount Amount of ERC20 token to withdraw.",
            "id": 26879,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAsset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26874,
                  "name": "assetData",
                  "nodeType": "VariableDeclaration",
                  "scope": 26879,
                  "src": "1205:24:91",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26873,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:5:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26876,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26879,
                  "src": "1239:14:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1195:64:91"
            },
            "returnParameters": {
              "id": 26878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:0:91"
            },
            "scope": 26925,
            "src": "1173:104:91",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Approves the respective proxy for a given asset to transfer tokens on the Forwarder contract's behalf.\n      This is necessary because an order fee denominated in the maker asset (i.e. a percentage fee) is sent by the\n      Forwarder contract to the fee recipient.\n      This method needs to be called before forwarding orders of a maker asset that hasn't\n      previously been approved.\n @param assetData Byte array encoded for the respective asset proxy.",
            "id": 26884,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveMakerAssetProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26881,
                  "name": "assetData",
                  "nodeType": "VariableDeclaration",
                  "scope": 26884,
                  "src": "1853:24:91",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26880,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:5:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1843:40:91"
            },
            "returnParameters": {
              "id": 26883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1900:0:91"
            },
            "scope": 26925,
            "src": "1812:89:91",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Purchases as much of orders' makerAssets as possible by selling as much of the ETH value sent\n      as possible, accounting for order and forwarder fees.\n @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n @param signatures Proofs that orders have been created by makers.\n @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n @param feeRecipients Addresses that will receive ETH when orders are filled.\n @return wethSpentAmount Amount of WETH spent on the given set of orders.\n @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.",
            "id": 26903,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketSellOrdersWithEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26887,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2687:30:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$26439_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 26885,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 26439,
                      "src": "2687:14:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$26439_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 26886,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2687:16:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$26439_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26890,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2727:25:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26888,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2727:5:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 26889,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2727:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26893,
                  "name": "ethFeeAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2762:30:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26891,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2762:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 26892,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2762:9:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26896,
                  "name": "feeRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2802:38:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26894,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2802:15:91",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 26895,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2802:17:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2677:169:91"
            },
            "returnParameters": {
              "id": 26902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26899,
                  "name": "wethSpentAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2908:23:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2908:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26901,
                  "name": "makerAssetAcquiredAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26903,
                  "src": "2945:32:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2894:93:91"
            },
            "scope": 26925,
            "src": "2645:343:91",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Attempt to buy makerAssetBuyAmount of makerAsset by selling ETH provided with transaction.\n      The Forwarder may *fill* more than makerAssetBuyAmount of the makerAsset so that it can\n      pay takerFees where takerFeeAssetData == makerAssetData (i.e. percentage fees).\n      Any ETH not spent will be refunded to sender.\n @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n @param makerAssetBuyAmount Desired amount of makerAsset to purchase.\n @param signatures Proofs that orders have been created by makers.\n @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n @param feeRecipients Addresses that will receive ETH when orders are filled.\n @return wethSpentAmount Amount of WETH spent on the given set of orders.\n @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.",
            "id": 26924,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketBuyOrdersWithEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26906,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4033:30:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$26439_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 26904,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 26439,
                      "src": "4033:14:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$26439_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 26905,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4033:16:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$26439_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26908,
                  "name": "makerAssetBuyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4073:27:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4073:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26911,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4110:25:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26909,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4110:5:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 26910,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4110:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26914,
                  "name": "ethFeeAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4145:30:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26912,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4145:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 26913,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4145:9:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26917,
                  "name": "feeRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4185:38:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26915,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4185:15:91",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 26916,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4185:17:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4023:206:91"
            },
            "returnParameters": {
              "id": 26923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26920,
                  "name": "wethSpentAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4291:23:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4291:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26922,
                  "name": "makerAssetAcquiredAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26924,
                  "src": "4328:32:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4328:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4277:93:91"
            },
            "scope": 26925,
            "src": "3992:379:91",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 26926,
        "src": "721:3652:91"
      }
    ],
    "src": "580:3794:91"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-11-25T13:25:45.191Z",
  "devdoc": {
    "methods": {
      "approveMakerAssetProxy(bytes)": {
        "details": "Approves the respective proxy for a given asset to transfer tokens on the Forwarder contract's behalf.      This is necessary because an order fee denominated in the maker asset (i.e. a percentage fee) is sent by the      Forwarder contract to the fee recipient.      This method needs to be called before forwarding orders of a maker asset that hasn't      previously been approved.",
        "params": {
          "assetData": "Byte array encoded for the respective asset proxy."
        }
      },
      "marketBuyOrdersWithEth((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],uint256,bytes[],uint256[],address[])": {
        "details": "Attempt to buy makerAssetBuyAmount of makerAsset by selling ETH provided with transaction.      The Forwarder may *fill* more than makerAssetBuyAmount of the makerAsset so that it can      pay takerFees where takerFeeAssetData == makerAssetData (i.e. percentage fees).      Any ETH not spent will be refunded to sender.",
        "params": {
          "ethFeeAmounts": "Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.",
          "feeRecipients": "Addresses that will receive ETH when orders are filled.",
          "makerAssetBuyAmount": "Desired amount of makerAsset to purchase.",
          "orders": "Array of order specifications used containing desired makerAsset and WETH as takerAsset.",
          "signatures": "Proofs that orders have been created by makers."
        },
        "return": "wethSpentAmount Amount of WETH spent on the given set of orders.makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders."
      },
      "marketSellOrdersWithEth((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256[],address[])": {
        "details": "Purchases as much of orders' makerAssets as possible by selling as much of the ETH value sent      as possible, accounting for order and forwarder fees.",
        "params": {
          "ethFeeAmounts": "Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.",
          "feeRecipients": "Addresses that will receive ETH when orders are filled.",
          "orders": "Array of order specifications used containing desired makerAsset and WETH as takerAsset.",
          "signatures": "Proofs that orders have been created by makers."
        },
        "return": "wethSpentAmount Amount of WETH spent on the given set of orders.makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders."
      },
      "withdrawAsset(bytes,uint256)": {
        "details": "Withdraws assets from this contract. The contract requires a ZRX balance in order to      function optimally, and this function allows the ZRX to be withdrawn by owner. It may also be      used to withdraw assets that were accidentally sent to this contract.",
        "params": {
          "amount": "Amount of ERC20 token to withdraw.",
          "assetData": "Byte array encoded for the respective asset proxy."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}